name: Deploy to DigitalOcean
on:
  push:
    branches:
      - production

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure latest code
        run: |
          git fetch origin production
          git checkout production
          git pull origin production

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DO_SSH_KEY }}
          known_hosts: unnecessary
          if_key_exists: replace

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.DO_HOST }} >> ~/.ssh/known_hosts

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push images
        run: |
          # Set version
          VERSION=$(date +%Y%m%d_%H%M%S)
          REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          
          # Build and push API
          echo "Building API with client..."
          docker build --no-cache --pull --build-arg CACHE_BUST=$(date +%s) -t ghcr.io/${REPO_LOWER}-api:$VERSION -t ghcr.io/${REPO_LOWER}-api:latest -f Dockerfile.multi --target api-build .
          docker push ghcr.io/${REPO_LOWER}-api:$VERSION
          docker push ghcr.io/${REPO_LOWER}-api:latest
          
          # Build and push nginx
          echo "Building nginx container..."
          docker build --no-cache --pull --build-arg CACHE_BUST=$(date +%s) -t ghcr.io/${REPO_LOWER}-client:$VERSION -t ghcr.io/${REPO_LOWER}-client:latest -f client/Dockerfile .
          docker push ghcr.io/${REPO_LOWER}-client:$VERSION
          docker push ghcr.io/${REPO_LOWER}-client:latest
          
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Deploy to DigitalOcean
        run: |
          ssh ${{ secrets.DO_USER }}@${{ secrets.DO_HOST }} "
            echo 'Starting deployment on server...' &&
            cd ~/LibreChat &&
            echo 'Logging into GitHub Container Registry...' &&
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin &&
            echo 'Updating repository...' &&
            git fetch origin production &&
            git checkout production &&
            git pull origin production &&
            echo 'Setting version: ${{ env.VERSION }}' &&
            export VERSION=${{ env.VERSION }} &&
            echo "Using API image: ghcr.io/justinshreve/librechat-api:${{ env.VERSION }}" &&
            echo "Current env VERSION: $VERSION" &&
            echo 'Stopping all containers...' &&
            VERSION=${{ env.VERSION }} docker compose -f ./deploy-compose.yml down &&
            echo 'Removing old images...' &&
            docker images "ghcr.io/justinshreve/librechat-api" --quiet | xargs -r docker rmi -f || true &&
            docker images "ghcr.io/justinshreve/librechat-client" --quiet | xargs -r docker rmi -f || true &&
            echo 'Pulling new images...' &&
            docker pull ghcr.io/justinshreve/librechat-api:${{ env.VERSION }} &&
            docker pull ghcr.io/justinshreve/librechat-client:${{ env.VERSION }} &&
            echo 'Starting all containers...' &&
            VERSION=${{ env.VERSION }} docker compose -f ./deploy-compose.yml up -d
          "
